/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Aktivnost;
import domen.Dogadjaj;
import domen.Mesto;
import domen.Nalog;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.KontrolerKI;
import modelTabela.TableModelAktivnost;
import prenos.Odgovor;

/**
 *
 * @author Jaša
 */
public class DogadjajFormaPrikaz extends javax.swing.JFrame {

    KontrolerKI kontroler = KontrolerKI.getInstance();
    TableModelAktivnost tma = new TableModelAktivnost();
    Dogadjaj dogadjaj;

    /**
     * Creates new form DogadjajForma
     */
    public DogadjajFormaPrikaz() {
        initComponents();
        popuniCombo(kontroler.getMesta());
        postaviModelTabele();
 
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jtxtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtOpis = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtAdresa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jlblKorisnik = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblAktivnosti = new javax.swing.JTable();
        jbtnObrisi = new javax.swing.JButton();
        jComboMesta = new javax.swing.JComboBox<>();
        jXDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        jspinnerSati = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jspinnerMinuti = new javax.swing.JSpinner();
        jbtnIzmeni = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("[Dodađaji ] Prikaz događaja");

        jLabel1.setText("Naziv:");

        jLabel2.setText("Opis");

        jLabel3.setText("Mesto:");

        jLabel4.setText("Datum:");

        jLabel5.setText("Adresa:");

        jlblKorisnik.setText("KORISNIK");

        jtblAktivnosti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblAktivnosti);

        jbtnObrisi.setText("Obrisi!");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jLabel7.setText("Sati:");

        jLabel8.setText("Minuti:");

        jbtnIzmeni.setText("Izmeni!");
        jbtnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblKorisnik)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtNaziv)
                                    .addComponent(jtxtOpis)
                                    .addComponent(jtxtAdresa)
                                    .addComponent(jComboMesta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jXDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jspinnerSati, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jspinnerMinuti, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtOpis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboMesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jXDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jspinnerSati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jspinnerMinuti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblKorisnik)
                    .addComponent(jbtnObrisi)
                    .addComponent(jbtnIzmeni))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
//        if (jtxtNaziv.getText().isEmpty() || jtxtOpis.getText().isEmpty() || jtxtAdresa.getText().isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Sva polja moraju viti uneta!", "Greška u unosu!", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
//        int sati = (int) jspinnerSati.getValue();
//        int minuti = (int) jspinnerMinuti.getValue();
//        if (sati > 23 || minuti > 59 || sati < 0 || minuti < 0) {
//            JOptionPane.showMessageDialog(this, "Vreme je pogrešno uneto. Proverite unos!", "Greška u unosu!", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
//        Date datum = jXDatePicker.getDate();
//        datum.setHours(sati);
//        datum.setMinutes(minuti);
//        Mesto mesto = (Mesto) jComboMesta.getSelectedItem();
//        String naziv = jtxtNaziv.getText().trim();
//        String opis = jtxtOpis.getText().trim();
//        String adresa = jtxtAdresa.getText().trim();
//        Nalog kreator = dogadjaj.getKreator();
//        Dogadjaj d = new Dogadjaj(dogadjaj.getIDD(), naziv, opis, datum, adresa, kreator, null, mesto);
//        tma.nalepiDogadjaj(d);
//        LinkedList<Aktivnost> listaAktivnosti = tma.getListaAktivnosti();
//        d.setSpisakAktivnosti(listaAktivnosti);
        try {
            Odgovor o = KontrolerKI.getInstance().obrisiDogadjaj(dogadjaj);
            JOptionPane.showMessageDialog(this, o.getPoruka(), "Uspešno!", JOptionPane.WARNING_MESSAGE);
            KontrolerKI.getInstance().osvezi();
            jbtnIzmeni.setEnabled(false);
            jbtnObrisi.setEnabled(false);
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška!", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniActionPerformed
        if (jtxtNaziv.getText().isEmpty() || jtxtOpis.getText().isEmpty() || jtxtAdresa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju viti uneta!", "Greška u unosu!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int sati = (int) jspinnerSati.getValue();
        int minuti = (int) jspinnerMinuti.getValue();
        if (sati > 23 || minuti > 59 || sati < 0 || minuti < 0) {
            JOptionPane.showMessageDialog(this, "Vreme je pogrešno uneto. Proverite unos!", "Greška u unosu!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Date datum = jXDatePicker.getDate();
        datum.setHours(sati);
        datum.setMinutes(minuti);
        Mesto mesto = (Mesto) jComboMesta.getSelectedItem();
        String naziv = jtxtNaziv.getText().trim();
        String opis = jtxtOpis.getText().trim();
        String adresa = jtxtAdresa.getText().trim();
        Nalog kreator = KontrolerKI.getInstance().getNalog();
        Dogadjaj d = new Dogadjaj(dogadjaj.getIDD(), naziv, opis, datum, adresa, kreator, null, mesto);
        tma.nalepiDogadjaj(d);
        LinkedList<Aktivnost> listaAktivnosti = tma.getListaAktivnosti();
        d.setSpisakAktivnosti(listaAktivnosti);
        try {
            Odgovor o = KontrolerKI.getInstance().izmeniDogadjaj(d);
            JOptionPane.showMessageDialog(this, o.getPoruka(), "Uspešno!", JOptionPane.INFORMATION_MESSAGE);
            KontrolerKI.getInstance().osvezi();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DogadjajFormaPrikaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DogadjajFormaPrikaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DogadjajFormaPrikaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DogadjajFormaPrikaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DogadjajFormaPrikaz().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Mesto> jComboMesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker;
    private javax.swing.JButton jbtnIzmeni;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JLabel jlblKorisnik;
    private javax.swing.JSpinner jspinnerMinuti;
    private javax.swing.JSpinner jspinnerSati;
    private javax.swing.JTable jtblAktivnosti;
    private javax.swing.JTextField jtxtAdresa;
    private javax.swing.JTextField jtxtNaziv;
    private javax.swing.JTextField jtxtOpis;
    // End of variables declaration//GEN-END:variables

    private void popuniCombo(LinkedList<Mesto> mesta) {
        for (Mesto mesto : mesta) {
            jComboMesta.addItem(mesto);
        }
    }

    private void postaviModelTabele() {
        jtblAktivnosti.setModel(tma);
    }

    public void dodaj(Aktivnost a) {
        tma.dodaj(a);
    }

    void podesiLabeluKorisnik(String text) {
        jlblKorisnik.setText(text);
    }

    void popuniDogadjaj(Dogadjaj dogadjaj) {
        this.dogadjaj = dogadjaj;
        jtxtNaziv.setText(dogadjaj.getNaziv());
        jtxtOpis.setText(dogadjaj.getOpis());
        jtxtAdresa.setText(dogadjaj.getAdresa());
        jXDatePicker.setDate(dogadjaj.getDatum());
        jComboMesta.setSelectedItem(dogadjaj.getMesto());
        Calendar calendar = GregorianCalendar.getInstance();
        System.out.println(dogadjaj.getDatum());
        calendar.setTime(dogadjaj.getDatum());
        jspinnerSati.setValue(calendar.get(Calendar.HOUR_OF_DAY));
        System.out.println(calendar.get(Calendar.HOUR_OF_DAY));
        System.out.println(calendar.get(Calendar.HOUR));
        jspinnerMinuti.setValue(calendar.get(Calendar.MINUTE));
        LinkedList<Aktivnost> listaAktivnosti = dogadjaj.getSpisakAktivnosti();
        for (Aktivnost aktivnost : listaAktivnosti) {
            tma.dodaj(aktivnost);
        }
        jlblKorisnik.setText(dogadjaj.getKreator().getIme());
        if (!dogadjaj.getKreator().getIme().equalsIgnoreCase(KontrolerKI.getInstance().getNalog().getIme())) {
            jbtnIzmeni.setEnabled(false);
            jbtnObrisi.setEnabled(false);
            jtxtNaziv.setEditable(false);
            jtxtOpis.setEditable(false);
            jtxtAdresa.setEditable(false);
            jComboMesta.setEditable(false);
            jspinnerMinuti.setEnabled(false);
            jspinnerSati.setEnabled(false);
            jXDatePicker.setEditable(false);
        }
        
    }
}
